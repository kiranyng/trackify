{"version":3,"sources":["components/gadgets/app-branding/AppBranding.js","components/gadgets/structure-treeview/StructureMenuItem.js","components/gadgets/structure-treeview/StructureMenu.js","components/layouts/page-content/PageContent.js","components/layouts/responsive-gridview/GridView.js","components/layouts/modal-dialog/ModalDialog.js","statemanagement/Project/ProjectActionTypes.js","statemanagement/Project/ProjectActionCreator.js","components/layouts/simple-listview/SimpleList.js","components/gadgets/folders-listview/EditFolder.js","components/gadgets/folders-listview/CreateFolderItem.js","components/layouts/icon/Icon.js","components/layouts/action-icon/ActionIcon.js","components/gadgets/folders-listview/FoldersListItem.js","components/gadgets/folders-listview/FoldersList.js","components/gadgets/tasks-listview/EditTask.js","components/gadgets/tasks-listview/CreateTask.js","components/gadgets/tasks-listview/TasksListItem.js","components/gadgets/tasks-listview/TasksList.js","components/gadgets/notes-listview/NoteView.js","components/gadgets/notes-listview/CreateNote.js","components/gadgets/notes-listview/RichNote.js","components/gadgets/notes-listview/NotesListItem.js","components/gadgets/notes-listview/NotesList.js","components/gadgets/folder-breadcrumbs/FolderBreadcrumbs.js","components/gadgets/explorer/Explorer.js","components/gadgets/TodaysTaskList/ActionCellRenderer.js","components/gadgets/TodaysTaskList/TaskProgress.js","components/gadgets/TodaysTaskList/TodaysTasks.js","components/gadgets/dashboard/Dashboard.js","components/gadgets/side-nav/SideNav.js","components/gadgets/timer-taskbar/TaskTimer.js","components/gadgets/timer-taskbar/TimerTaskbar.js","components/gadgets/quotes-block/Quotes.js","components/layouts/portal-view/Portal.js","App.js","serviceWorker.js","statemanagement/Project/ProjectReducer.js","statemanagement/store.js","index.js","logo.svg"],"names":["AppBranding","props","className","src","appIcon","alt","appTitle","StructureMenuItem","state","hasNested","item","children","length","to","id","name","items","isNested","StructureMenu","connect","folder_id","folder_meta","content","subFolderContent","fldr","subfolders","Object","entries","key","push","isNestedClassName","map","subChildren","keys","aria-label","PageContent","title","GridView","cols","ModalDialog","forwardRef","ref","React","useState","display","setDisplay","useImperativeHandle","openModal","closeModal","ReactDOM","createPortal","role","onClick","current","document","getElementById","INIT","LOAD","CREATE_NOTE","EDIT_NOTE","DELETE_NOTE","CREATE_TASK","EDIT_TASK","DELETE_TASK","START_TASK","RESOLVE_TASK","REJECT_TASK","REOPEN_TASK","newNote","folder","data","type","Action","payload","editNote","resolveTask","rejectTask","reopenTask","timerStopTask","SimpleList","mode","item_id","Error","dispatch","updateFolder","createFolder","parentFolderId","createFolderAction","onSubmit","ev","preventDefault","formData","FormData","target","value","console","log","onFinish","e","error","message","htmlFor","defaultValue","CreateFolderItem","newFolderModelRef","useRef","tabIndex","arialabel","Icon","text","ActionIcon","deleteFolder","modelRef","onContextMenu","alert","window","confirm","ownProps","folderContent","list","index","tasks","createTask","newTask","editTask","preview","progress","status","readOnly","description","tasknotes","disabled","priority","estimate","deadline","CreateTask","newTaskModelRef","timestamp","Date","now","start","startTask","resolve","reject","reopen","delete","track","editModalRef","statusClassName","tasksObj","notes","createNote","html","setHtml","innerRef","onChange","prevValue","substring","CreateNote","createNoteModalRef","RichNote","handleChange","evt","div","createElement","innerHTML","sanitizeHtml","textContent","setState","sanitizeConf","allowedTags","allowedAttributes","a","sanitize","toggleEditable","editable","render","EditButton","cmd","arg","onMouseDown","ColorButton","color","tagName","Component","linkURL","prompt","sText","getSelection","execCommand","style","backgroundColor","deleteNote","editNoteRef","previewNoteRef","notesObj","FolderBreadcrumbs","this","parentFolders","slice","reverse","currentFolder","match","params","ActionGridCellRender","TaskProgress","max","todoList","domLayout","rowData","frameworkComponents","taskProgress","actionCellRenderer","onRowClicked","field","sortable","filter","cellRenderer","Dashboard","SideNav","isTimer","startTimeStamp","startDateTime","estimatedEndDateTime","currentTime","initProgress","diffTime","diffTimeInSecs","Math","floor","initHrs","initMins","abs","initSecs","hrs","setHrs","mins","setMins","secs","setSecs","setProgress","showWarning","setWarningStatus","useEffect","interval","setInterval","clearInterval","toLocaleString","hour12","activeTask","task_timers","active","taskList","queue","startNext","startTimestamp","quotes","getRandomInt","min","ceil","random","Quotes","quote","setQuote","Portal","path","exact","component","Explorer","App","logo","projectName","pageTitle","Boolean","location","hostname","initialState","persistedState","localStorage","getItem","JSON","parse","store","configureStore","reducer","action","Actions","getTime","newState","stringify","newId","find","shift","preloadedState","subscribe","throttle","setItem","getState","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.106a3ea6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./AppBranding.css\";\r\n\r\nfunction AppBranding(props) {\r\n  return (\r\n    <div className=\"App-branding\">\r\n        <img className=\"App-logo\" src={props.appIcon} alt=\"logo\"></img>\r\n        <span className=\"App-title\">{props.appTitle}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppBranding;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StructureMenu from './StructureMenu';\r\n\r\nimport \"./StructureMenu.css\";\r\n\r\nfunction StructureMenuItem(props, state) {\r\n    const hasNested = props.item && props.item.children && props.item.children.length > 0;\r\n\r\n    if(hasNested) {\r\n        return (\r\n            <li>\r\n                <span className=\"menu-caret menu-caret-down\"> <Link to={ `/explore/${ props.item.id }` }>{props.item.name} </Link></span>\r\n                { hasNested && <StructureMenu items={props.item.children} isNested={true} />}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <Link to={ `/explore/${ props.item.id }` }>{props.item.name} </Link>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default StructureMenuItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './StructureMenu.css';\r\n\r\nimport StructureMenuItem from './StructureMenuItem';\r\n\r\nconst mapStateToProps = ( state, props ) => {\r\n    // return props;\r\n\r\n    // TODO WIP\r\n\r\n    const folder_id = props.folder_id ? props.folder_id : '$';\r\n    const folder_meta = state.content[folder_id];\r\n\r\n    const name = folder_meta.name;\r\n    // const hasChildren = Object.keys(folder_meta.fldr).length > 0;\r\n\r\n    const subFolderContent = folder_meta.fldr;\r\n    const subfolders = [];\r\n\r\n    if(subFolderContent) {\r\n        for (const [key, value] of Object.entries(subFolderContent)) {\r\n            subfolders.push( state.content[key] );\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...props,\r\n        id: folder_id,\r\n        name,\r\n        subfolders\r\n    };\r\n}\r\n\r\nfunction _StructureMenu( props ) {\r\n    let items = [];\r\n    let isNestedClassName = props.subfolders.length ? 'menu-nested' : '';\r\n\r\n    items = props.subfolders.map((item) => {\r\n        const subChildren = Object.keys( item.fldr );\r\n        const hasChildren = subChildren && subChildren.length > 0;\r\n\r\n        if( hasChildren ){\r\n            return <StructureMenu key={ item.id } folder_id={ item.id }/>\r\n        }\r\n\r\n        return <StructureMenuItem key={item.id} item={item}/>\r\n    });\r\n\r\n    if( props.id === '$' ){\r\n        return (\r\n            <nav className=\"Project-structure-nav\" aria-label=\"folder structure\"> \r\n                <span className=\"menu-caret\"> <Link to={ `/explore` }> Home </Link> </span>\r\n                <ul className={`tree-menu ${isNestedClassName}`}>\r\n                    {items}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <span className=\"menu-caret\"> <Link to={ `/explore/${ props.id }` }>{props.name} </Link> </span>\r\n            <ul className={`tree-menu ${isNestedClassName}`}>\r\n                {items}\r\n            </ul>\r\n        </li>\r\n    );\r\n}\r\n\r\nconst StructureMenu = connect(mapStateToProps)( _StructureMenu );\r\n\r\nexport default StructureMenu;","import React from 'react';\r\n\r\nimport './PageContent.css';\r\n\r\nfunction PageContent(props) {\r\n    return (\r\n        <div className=\"Page-content\">\r\n            <h1>\r\n                {props.title}\r\n            </h1>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageContent;","import React from 'react';\r\n\r\nimport './GridView.css';\r\n\r\nfunction GridView(props) {\r\n    return (\r\n        <div className={`Grid-view Grid-view-${props.cols && props.cols <= 6 && props.cols > 0 ? props.cols : 3}-cols`}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridView;","import React, { forwardRef, useImperativeHandle } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./ModalDialog.css\";\r\n\r\nconst ModalDialog = forwardRef( (props, ref) => {\r\n    const [display, setDisplay] = React.useState(false);\r\n\r\n    const open = () => {\r\n        setDisplay(true);\r\n    }\r\n\r\n    const close = (ev) => {\r\n        setDisplay(false);\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            openModal: () => open(),\r\n            closeModal: () => close()\r\n        };\r\n    });\r\n\r\n    if(display){\r\n        // TODO handle multiple JSX props to use as slots\r\n        return ReactDOM.createPortal (\r\n            <div className=\"Modal-dialog\" role=\"dialog\">\r\n                <div onClick={ ref.current.closeModal } className=\"Modal-overlay\"></div>\r\n                <div className=\"Modal-box\">\r\n                    { props.title ? (<div className=\"Modal-title\"> {props.title} </div>) : '' }\r\n\r\n                    <div className=\"Modal-content\">\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        , document.getElementById('modal-root'));\r\n    }\r\n \r\n    return null\r\n} );\r\n\r\nexport default ModalDialog;","const INIT = 'project/init';\r\nconst LOAD = 'project/load';\r\n\r\nconst CREATE_FOLDER = 'project/create-folder';\r\nconst EDIT_FOLDER = 'project/edit-folder';\r\nconst DELETE_FOLDER = 'project/delete-folder';\r\n\r\nconst CREATE_NOTE = 'project/folder/create-note';\r\nconst EDIT_NOTE = 'project/folder/edit-note';\r\nconst DELETE_NOTE = 'project/folder/delete-note';\r\n\r\nconst CREATE_TASK = 'project/folder/create-task';\r\nconst EDIT_TASK = 'project/folder/edit-task';\r\nconst DELETE_TASK = 'project/folder/delete-task';\r\nconst START_TASK = 'project/folder/start-task';\r\nconst RESOLVE_TASK = 'project/folder/resolve-task';\r\nconst REJECT_TASK = 'project/folder/reject-task';\r\nconst REOPEN_TASK = 'project/folder/reopen-task';\r\n\r\nconst TIMER_TRACK_TASK = 'project/timer/track-task';\r\nconst TIMER_STARTNEXT_TASK = 'project/timer/start-task';\r\nconst TIMER_STOP_TASK = 'project/timer/stop-task';\r\nconst TIMER_CLEAR_TASK = 'project/timer/clear-task';\r\n\r\nexport { \r\n    INIT, \r\n    LOAD, \r\n    \r\n    CREATE_FOLDER, \r\n    EDIT_FOLDER, \r\n    DELETE_FOLDER,\r\n\r\n    CREATE_NOTE, \r\n    EDIT_NOTE, \r\n    DELETE_NOTE,\r\n    \r\n    CREATE_TASK, \r\n    EDIT_TASK, \r\n    DELETE_TASK,\r\n    START_TASK,\r\n    RESOLVE_TASK,\r\n    REJECT_TASK,\r\n    REOPEN_TASK,\r\n\r\n    TIMER_TRACK_TASK,\r\n    TIMER_STARTNEXT_TASK,\r\n    TIMER_STOP_TASK,\r\n    TIMER_CLEAR_TASK\r\n};","import * as Action from './ProjectActionTypes';\r\n\r\nconst initProject = (name) => {\r\n    return {\r\n        type: Action.INIT,\r\n        payload: {\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nconst loadProject = (data) => {\r\n    return {\r\n        type: Action.LOAD,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst newFolder = (name, parentFolderId) => {\r\n    return {\r\n        type: Action.CREATE_FOLDER,\r\n        payload: {\r\n            name,\r\n            folder: parentFolderId\r\n        }\r\n    }\r\n}\r\n\r\nconst editFolder = (id, data) => {\r\n    return {\r\n        type: Action.EDIT_FOLDER,\r\n        payload: {\r\n            id,\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst deleteFolder = (id) => {\r\n    return {\r\n        type: Action.DELETE_FOLDER,\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst newNote = (folder, data) => {\r\n    return {\r\n        type: Action.CREATE_NOTE,\r\n        payload: {\r\n            folder,\r\n            ...data\r\n        }\r\n    }\r\n}\r\n\r\nconst editNote = (folder, data) => {\r\n    return {\r\n        type: Action.EDIT_NOTE,\r\n        payload: {\r\n            folder,\r\n            ...data\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst deleteNote = (folder, id) => {\r\n    return {\r\n        type: Action.DELETE_NOTE,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst newTask = (folder, data) => {\r\n    return {\r\n        type: Action.CREATE_TASK,\r\n        payload: {\r\n            folder,\r\n            ...data\r\n        }\r\n    }\r\n}\r\n\r\nconst editTask = (folder, data) => {\r\n    return {\r\n        type: Action.EDIT_TASK,\r\n        payload: {\r\n            folder,\r\n            ...data\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst deleteTask = (folder, id) => {\r\n    return {\r\n        type: Action.DELETE_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst startTask = (folder, id, timestamp) => {\r\n    return {\r\n        type: Action.START_TASK,\r\n        payload: {\r\n            folder,\r\n            id,\r\n            timestamp\r\n        }\r\n    }\r\n}\r\n\r\nconst resolveTask = (folder, id) => {\r\n    return {\r\n        type: Action.RESOLVE_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst rejectTask = (folder, id) => {\r\n    return {\r\n        type: Action.REJECT_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst reopenTask = (folder, id) => {\r\n    return {\r\n        type: Action.REOPEN_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst timerTrackTask = (folder, id) => {\r\n    return {\r\n        type: Action.TIMER_TRACK_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst timerStartNextTask = (startTimeStamp) => {\r\n    return {\r\n        type: Action.TIMER_STARTNEXT_TASK,\r\n        payload: {\r\n            startTimeStamp\r\n        }\r\n    }\r\n}\r\n\r\nconst timerStopTask = (folder, id) => {\r\n    return {\r\n        type: Action.TIMER_STOP_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nconst timerClearTask = (folder, id) => {\r\n    return {\r\n        type: Action.TIMER_CLEAR_TASK,\r\n        payload: {\r\n            folder,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    initProject,\r\n    loadProject,\r\n    \r\n    newFolder,\r\n    editFolder,\r\n    deleteFolder,\r\n\r\n    newNote,\r\n    editNote,\r\n    deleteNote,\r\n\r\n    newTask,\r\n    editTask,\r\n    deleteTask,\r\n    startTask,\r\n    resolveTask,\r\n    rejectTask,\r\n    reopenTask,\r\n\r\n    timerTrackTask,\r\n    timerStartNextTask,\r\n    timerStopTask,\r\n    timerClearTask\r\n}","import React from 'react';\r\n\r\nimport \"./SimpleList.css\";\r\n\r\nfunction SimpleList(props) {\r\n    return (\r\n        <div className=\"Simple-list\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleList;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editFolder as editFolderAction, newFolder as createFolderAction } from \"../../../statemanagement/Project/ProjectActionCreator\"\r\n\r\nimport SimpleList from \"../../layouts/simple-listview/SimpleList\";\r\n\r\nimport \"./EditFolder.css\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    let item = {};\r\n    let folder = '';\r\n\r\n    if( props.mode === 'create' || !props.item_id){\r\n        if( !props.folder || !state.content[props.folder] ){\r\n            throw Error(`folder attribute must be a valid one for 'create' mode`);\r\n        }\r\n\r\n        folder = props.folder\r\n    } else {\r\n        if( !state.content[props.item_id] ) {\r\n            throw Error(`Folder with id ${props.item_id} not found!`);\r\n        }\r\n\r\n        item = state.content[props.item_id];\r\n        folder = item.folder\r\n    }\r\n\r\n    return {\r\n        ...props,\r\n        item,\r\n        folder\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n      // dispatching plain actions\r\n      updateFolder: ( payload ) => dispatch( editFolderAction( payload.id, payload ) ),\r\n      createFolder: ( name, folder ) => dispatch( createFolderAction( name, folder ) )\r\n    }\r\n  }\r\n\r\nfunction EditFolder(props) {\r\n    const submitHandler = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        const formData = new FormData(ev.target);\r\n        let payload = {};\r\n\r\n        for (var [key, value] of formData.entries()) { \r\n            payload[key] = value;\r\n        }\r\n        \r\n        console.log(\"Form data:\", ...formData);\r\n\r\n        if( props.mode === 'create' ) {\r\n            props.createFolder( payload.name, props.folder );\r\n        } else {\r\n            props.updateFolder( payload );\r\n        }\r\n\r\n        if(props.onFinish) {\r\n            try {\r\n                props.onFinish();\r\n            } catch(e ) {\r\n                console.error( e.message );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Edit-folder\">\r\n            <form onSubmit={submitHandler} aria-label=\"Folder details\">\r\n                <SimpleList>\r\n                    <label htmlFor=\"name\">Folder name</label>\r\n                    {\r\n                        props.item.id ? <input type=\"hidden\" name=\"id\" value={ props.item.id }/> : ''\r\n                    }\r\n                    <input type=\"text\" name=\"name\" defaultValue={props.item.name}/>\r\n                </SimpleList>\r\n                \r\n                <div className=\"Modal-buttons\">\r\n                    <input type=\"submit\" value=\"Save\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(EditFolder);","import React from 'react';\r\n\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog';\r\nimport EditFolder from './EditFolder';\r\n\r\nfunction CreateFolderItem(props) {\r\n    const newFolderModelRef = React.useRef();\r\n\r\n    const launchNewFolderModal = (ev) => {\r\n        newFolderModelRef.current.openModal();\r\n    }\r\n\r\n    const editFinishHanlder = (ev) => {\r\n        newFolderModelRef.current.closeModal();\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <div tabIndex=\"0\" role=\"button\" arialabel=\"create folder\" className=\"Folder-name\" onClick={ launchNewFolderModal }>\r\n                <span className=\"Create-folder-item-icon\">NEW Folder</span>\r\n            </div>\r\n            <ModalDialog ref={newFolderModelRef} title=\"Create new folder\">\r\n                <EditFolder mode=\"create\" folder={ props.folder } onFinish={ editFinishHanlder }/>\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default CreateFolderItem;","import React from 'react';\r\n\r\nimport './Icon.css';\r\n\r\nconst Icon = (props) => {\r\n    return (\r\n        <span className={`icon icon-${props.type}`}> {props.text} </span>\r\n    );\r\n}\r\n\r\nexport default Icon;","import React from \"react\";\r\nimport Icon from \"../icon/Icon\";\r\n\r\nimport \"./ActionIcon.css\";\r\n\r\nconst ActionIcon = (props) => {\r\n    return (\r\n        <button className=\"Action-icon\" aria-label={ props.arialabel ? props.arialabel : props.type } onClick={props.onClick}>\r\n            <Icon type={props.type} text={props.text}/>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ActionIcon;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport EditFolder from './EditFolder';\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog.js'\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteFolder } from '../../../statemanagement/Project/ProjectActionCreator';\r\nimport ActionIcon from '../../layouts/action-icon/ActionIcon';\r\n\r\n//      deleteFolder: ( id ) => dispatch( deleteFolder( id ) )\r\n\r\nconst mapDispatchToProps = ( dispatch, props ) => {\r\n    return {\r\n        deleteFolder: () => dispatch( deleteFolder( props.item.id ) )\r\n    }\r\n}\r\n\r\nfunction FoldersListItem(props) {\r\n    const modelRef = React.useRef();\r\n\r\n    const launchModal = () => {\r\n        modelRef.current.openModal();\r\n    }\r\n    \r\n    const editFinishHanlder = (ev) => {\r\n        console.log('Editing finished!');\r\n\r\n        modelRef.current.closeModal();\r\n    }\r\n\r\n    const deleteFolder = () => {\r\n        if( window.confirm( `Really want to delete folder '${ props.item.name }'?` ) ) {\r\n            props.deleteFolder();\r\n        }\r\n    }\r\n\r\n    const showMoveToFolderModal = ( ev ) => {\r\n        ev.preventDefault();\r\n\r\n        alert( \"folder right clicked\" );\r\n    }\r\n\r\n    // <div onClick={ launchModal }> { props.item.name } </div>\r\n    return (\r\n        <li> \r\n            <div onContextMenu={ showMoveToFolderModal }>\r\n                <Link to={`/explore/${ props.item.id }`}> { props.item.name } </Link> \r\n                <ActionIcon type='edit' arialabel=\"edit\" onClick={ launchModal } />\r\n                <ActionIcon type='bin' arialabel=\"delete\" onClick={ deleteFolder } />\r\n            </div>\r\n            <ModalDialog ref={modelRef} title={`Rename folder from '${props.item.name}'`}>\r\n                <EditFolder item_id={props.item.id} onFinish={ editFinishHanlder } />\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default connect( null, mapDispatchToProps )( FoldersListItem );","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport \"./FoldersList.css\";\r\nimport CreateFolderItem from './CreateFolderItem';\r\nimport FoldersListItem from './FoldersListItem';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const folderContent = state.content[ownProps.folder] && state.content[ownProps.folder].fldr;\r\n    \r\n    const list = [];\r\n    const folder = ownProps.folder;\r\n\r\n    if(folderContent) {\r\n        for (const [key, value] of Object.entries(folderContent)) {\r\n            list.push(state.content[key]);\r\n        }\r\n    }\r\n\r\n    return {\r\n        list,\r\n        folder\r\n    };\r\n};\r\n\r\n\r\nfunction FoldersList(props) {\r\n    return ( \r\n        <div className=\"Folder-grid-view\" role=\"region\" aria-label=\"Folders list\">\r\n            <ul className = \"Folders-list\" >\r\n                <CreateFolderItem folder={props.folder}/>\r\n                { props.list.length === 0 ? <li><div className=\"Folder-no-subfolders\">No subfolders!</div></li> : '' }\r\n                {\r\n                    props.list.map((item, index) => {\r\n                        return <FoldersListItem key = { item.id } item = { item } />\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(FoldersList);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTask, newTask } from \"../../../statemanagement/Project/ProjectActionCreator\";\r\n\r\nimport SimpleList from \"../../layouts/simple-listview/SimpleList\";\r\n\r\nimport \"./EditTask.css\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    if( props.item_id ) {\r\n        const item = state.content[props.folder].tasks[props.item_id];\r\n\r\n        return {\r\n            ...props,\r\n            item\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...props\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        createTask: (folder, payload) => dispatch( newTask(folder, payload) ),\r\n        editTask: (folder, payload) => dispatch( editTask( folder, payload ) )\r\n    }\r\n}\r\n\r\nfunction EditTask(props) {\r\n    const submitHandler = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        if( props.preview == true ){\r\n            return false;\r\n        }\r\n\r\n        const formData = new FormData(ev.target);\r\n\r\n        const payload = {};\r\n        for (var [key, value] of formData.entries()) { \r\n            console.log(key, value);\r\n\r\n            payload[key] = value;\r\n        }\r\n\r\n        if( props.item ){\r\n            props.editTask( props.folder, payload );\r\n        } else {\r\n            payload.progress = 0;\r\n            payload.status = 'open';\r\n    \r\n            props.createTask( props.folder, payload );\r\n        }\r\n\r\n        if( props.onFinish ){\r\n            try {\r\n                props.onFinish();\r\n            } catch(e) {\r\n                console.error(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Edit-task\">\r\n            <form onSubmit={ submitHandler } aria-label=\"Task details\">\r\n                { \r\n                    props.item ? <input type=\"hidden\" name=\"id\" value={ props.item.id }/> : ''\r\n                }\r\n                {\r\n                    props.item ? <input type=\"hidden\" name=\"folder\" value={ props.item.folder }/> : ''\r\n                }\r\n\r\n                <SimpleList>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input readOnly={ props.preview } type=\"text\" name=\"title\" defaultValue={props.item ? props.item.title : ''}/>\r\n                </SimpleList>\r\n                \r\n                <SimpleList>\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea readOnly={ props.preview } name=\"description\" defaultValue={props.item ? props.item.description : ''}/>\r\n                </SimpleList>\r\n                \r\n                <SimpleList>\r\n                    <label htmlFor=\"tasknotes\">Task notes</label>\r\n                    <textarea readOnly={ props.preview } name=\"tasknotes\" defaultValue={props.item ? props.item.tasknotes : ''}/>\r\n                </SimpleList>\r\n                \r\n                <SimpleList>\r\n                    <label htmlFor=\"priority\">Priority</label>\r\n                    <select disabled={ props.preview } name=\"priority\" defaultValue={props.item ? props.item.priority : '45'}>\r\n                        <option value=\"100\">Critical</option>\r\n                        <option value=\"85\">Very High</option>\r\n                        <option value=\"65\">High</option>\r\n                        <option value=\"45\">Medium</option>\r\n                        <option value=\"15\">Low</option>\r\n                    </select>\r\n                </SimpleList>\r\n                \r\n                <SimpleList>\r\n                    <label htmlFor=\"estimate\">Estimate (in mins)</label>\r\n                    <input readOnly={ props.preview } type=\"number\" name=\"estimate\" defaultValue={props.item ? props.item.estimate : '60'}/>\r\n                </SimpleList>\r\n                \r\n                <SimpleList>\r\n                    <label htmlFor=\"datetime-local\">Deadline</label>\r\n                    <input readOnly={ props.preview } type=\"date\" name=\"deadline\" defaultValue={props.item ? props.item.deadline : ''}/>\r\n                </SimpleList>\r\n\r\n                {\r\n                    !props.preview ? (\r\n                        (<div className=\"Modal-buttons\">\r\n                            <input type=\"submit\" value=\"Save\"/>\r\n                        </div>) \r\n                    ): ''\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( EditTask );","import React from 'react';\r\n\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog';\r\nimport EditTask from './EditTask';\r\n\r\nfunction CreateTask( props ) {\r\n    const newTaskModelRef = React.useRef();\r\n\r\n    const openEditTaskModal = () => {\r\n        newTaskModelRef.current.openModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        newTaskModelRef.current.closeModal();\r\n    }\r\n\r\n    return (\r\n        <li className=\"Task-create\">\r\n            <div tabIndex=\"0\" role=\"button\" arialabel=\"create task\" onClick={ openEditTaskModal }>\r\n                <span className=\"Create-task-icon\">NEW Task</span>\r\n            </div>\r\n            <ModalDialog ref={newTaskModelRef} title=\"Create new task\">\r\n                <EditTask folder={ props.folder } onFinish={ closeModal }/>\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default CreateTask;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { startTask, resolveTask, rejectTask, reopenTask, deleteTask, timerTrackTask } from '../../../statemanagement/Project/ProjectActionCreator';\r\n\r\nimport ActionIcon from '../../layouts/action-icon/ActionIcon';\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog';\r\nimport EditTask from './EditTask';\r\n\r\nconst mapDispatchToProps = ( dispatch, props ) => {\r\n    const timestamp = Date.now();\r\n\r\n    return {\r\n        start: () => dispatch( startTask( props.item.folder, props.item.id, timestamp ) ),\r\n        resolve: () => dispatch( resolveTask( props.item.folder, props.item.id ) ),\r\n        reject: () => dispatch( rejectTask( props.item.folder, props.item.id ) ),\r\n        reopen: () => dispatch( reopenTask( props.item.folder, props.item.id ) ),\r\n        delete: () => dispatch( deleteTask( props.item.folder, props.item.id ) ),\r\n\r\n        track: () => dispatch( timerTrackTask( props.item.folder, props.item.id ) ),\r\n    }\r\n}\r\n\r\nfunction TasksListItem(props) {\r\n    const editModalRef = React.useRef();\r\n\r\n    const resolveTask = () => {\r\n        props.resolve()\r\n    }\r\n\r\n    const rejectTask = () => {\r\n        props.reject()\r\n    }\r\n\r\n    const trackTask = () => {\r\n        props.start();\r\n        props.track();\r\n    }\r\n\r\n    const reopenTask = () => {\r\n        if( window.confirm( `Really want to reopen task '${props.item.title}'?` ) ) {\r\n            props.reopen()\r\n        }\r\n    }\r\n\r\n    const deleteTask = () => {\r\n        if( window.confirm( `Really want to delete task '${props.item.title ? props.item.title : 'Empty note'}'?` ) ) {\r\n            props.delete();\r\n        }\r\n    }\r\n\r\n    const launchModal = () => {\r\n        editModalRef.current.openModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        editModalRef.current.closeModal();\r\n    }\r\n\r\n    const status =  props.item.status ? props.item.status : 'open';\r\n    let statusClassName = '';\r\n    \r\n    if( status === 'resolved' ){\r\n        statusClassName = 'task-listitem-resolved';\r\n    } else if(status === 'rejected') {\r\n        statusClassName = 'task-listitem-rejected';\r\n    } else if(status === 'inprogress') {\r\n        statusClassName = 'task-listitem-inprogress';\r\n    }\r\n\r\n    return (\r\n        <li className={ `task-listitem ${statusClassName}` } > \r\n            <div>\r\n            {\r\n                ( status === 'open' || status === 'reopen' ) ? \r\n                    <div>\r\n                        <ActionIcon type='accept' arialabel=\"resolve task\" onClick={ resolveTask } />\r\n                        <ActionIcon type='reject' arialabel=\"reject task\" onClick={ rejectTask } />\r\n                    </div> : \r\n                    <div>\r\n                        <ActionIcon type='refresh' onClick={ reopenTask } />\r\n                    </div>\r\n            }\r\n            </div>\r\n            \r\n            <div role=\"button\" tabIndex=\"0\" aria-label={ props.item.title } className={ `task-listitem-title ${ statusClassName }` } onClick={ launchModal }> { props.item.title } </div> \r\n            \r\n            <div>\r\n            {\r\n                ( status === 'open' || status === 'reopen' )? <ActionIcon type='play' arialabel=\"add to timer queue\" onClick={ trackTask }/> : ''\r\n            }\r\n                <ActionIcon type='bin' arialabel=\"delete\" onClick={ deleteTask } />\r\n            </div>\r\n\r\n            <ModalDialog ref={ editModalRef } title=\"Task details\">\r\n                <EditTask item_id={ props.item.id } folder={props.item.folder} onFinish={ closeModal }/>\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\n// export default TasksListItem;\r\n\r\nexport default connect( null, mapDispatchToProps )( TasksListItem );","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport \"./TasksList.css\";\r\nimport CreateTask from './CreateTask';\r\nimport TasksListItem from './TasksListItem';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const tasksObj =  state.content[props.folder] && state.content[props.folder].tasks;\r\n    const list = [];\r\n\r\n    if(tasksObj) {\r\n        for (const [key, value] of Object.entries(tasksObj)) {\r\n            list.push(value);\r\n        }\r\n    }\r\n\r\n    return {\r\n        list\r\n    }\r\n}\r\n\r\nfunction TasksList(props) {\r\n    return (\r\n        <div className=\"Task-list-region\" role=\"region\" aria-label=\"Tasks list\">\r\n            <ul className=\"Tasks-list\">\r\n                <CreateTask folder={ props.folder }/>\r\n                { props.list.length === 0 ? <li>No tasks!!</li> : '' }\r\n                {props.list.map((item, index) => {\r\n                    return <TasksListItem folder={ props.folder } key={item.id} item={item}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(TasksList);","import React, { useRef } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nimport { editNote, newNote } from \"../../../statemanagement/Project/ProjectActionCreator\";\r\n\r\nimport SimpleList from \"../../layouts/simple-listview/SimpleList\";\r\n\r\nimport \"./NoteView.css\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    if( props.item_id ){\r\n        const item = state.content[props.folder].notes[props.item_id];\r\n\r\n        return {\r\n            ...props,\r\n            item\r\n        }\r\n    } else {\r\n        return {\r\n            ...props\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        createNote: ( folder, data ) => dispatch( newNote( folder, data ) ),\r\n        editNote: ( folder, data ) => dispatch( editNote( folder, data ) )\r\n    }\r\n}\r\n\r\nfunction NoteView(props) {\r\n    const [ html, setHtml ] = React.useState( props.item && props.item.text ? props.item.text : '' )\r\n    const ref = useRef();\r\n\r\n    const submitHandler = (ev) => { \r\n        ev.preventDefault();\r\n\r\n        const payload = {};\r\n\r\n        const formData = new FormData(ev.target);\r\n        for (var [key, value] of formData.entries()) { \r\n            payload[key] = value;\r\n        }\r\n\r\n        console.log(\"note update data:\", payload);\r\n\r\n        if( !props.item_id ){\r\n            payload.title = payload['text'].substring(0, 30);\r\n\r\n            //payload.text = '<p>' + payload.text + '</p>' // use this to make contenteditable insert <p> instead of <div> and <br>\r\n            payload.text = payload.text\r\n            props.createNote(props.folder, payload);\r\n        } else {\r\n            props.editNote(props.folder, payload);\r\n        }\r\n\r\n        // close modal only for Create form but not to edit form\r\n        if( !props.item_id && props.onFinish ){\r\n            try {\r\n                props.onFinish() \r\n            } catch( e ) {\r\n                console.error( e.message );\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateNote = (ev) => {\r\n        const prevValue = props.item.text;\r\n\r\n        const payload = {\r\n            text: ev.target.value\r\n        };\r\n\r\n        if( payload.text !== prevValue ) {\r\n            if( !props.item_id ){\r\n                props.createNote(props.folder, payload);\r\n            } else {\r\n                payload.id = props.item_id;\r\n\r\n                props.editNote(props.folder, payload);\r\n\r\n                setHtml( ev.target.value );\r\n            }\r\n        }\r\n    }\r\n\r\n    if( props.item_id ) {\r\n        return (\r\n            <div className=\"Note-view\">\r\n                <ContentEditable\r\n                    innerRef={ ref }\r\n                    html={ html } // innerHTML of the editable div\r\n                    disabled={ false }       // use true to disable editing\r\n                    onChange={ updateNote } // handle innerHTML change\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ submitHandler } aria-label=\"Take a note\">\r\n            <input type=\"hidden\" name=\"folder\" defaultValue={ props.folder }/>\r\n            {\r\n                props.item_id ? <input type=\"hidden\" name=\"id\" value={ props.item_id }/> : ''\r\n            }\r\n\r\n            <SimpleList>\r\n                <label htmlFor=\"text\">Note</label>\r\n                <textarea className=\"Note-textarea\" name=\"text\" defaultValue={ props.item ? props.item.text : '' }/>\r\n            </SimpleList>\r\n            \r\n            <div className=\"Modal-buttons\">\r\n                <input type=\"submit\" value=\"Save\"/>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( NoteView );","import React from 'react';\r\n\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog';\r\nimport NoteView from './NoteView';\r\n\r\nfunction CreateNote( props ) {\r\n    const createNoteModalRef = React.useRef();\r\n\r\n    const launchModal = () => {\r\n        createNoteModalRef.current.openModal();\r\n    }\r\n\r\n    const hideModal = () => {\r\n        createNoteModalRef.current.closeModal();\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <div tabIndex=\"0\" role=\"button\" arialabel=\"create note\" className=\"Note-listitem-title\" onClick={ launchModal }>\r\n                <span className=\"Create-note-icon\">NEW Note</span>\r\n            </divr\n            <ModalDialog ref={createNoteModalRef} title=\"Create a new note\">\r\n                <NoteView folder={ props.folder } onFinish={ hideModal } />\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default CreateNote;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport sanitizeHtml from \"sanitize-html\";\r\n\r\nimport { editNote, newNote } from '../../../statemanagement/Project/ProjectActionCreator';\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    if( props.item_id ){\r\n        const item = state.content[props.folder].notes[props.item_id];\r\n\r\n        return {\r\n            item\r\n        }\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createNote: ( folder, data ) => dispatch( newNote( folder, data ) ),\r\n        editNote: ( folder, data ) => dispatch( editNote( folder, data ) )\r\n    }\r\n}\r\n\r\nclass RichNote extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        html: this.props.item.text,\r\n        editable: this.props.mode !== \"preview\"\r\n      };\r\n    }\r\n    handleChange = evt => {\r\n      const div = document.createElement('div');\r\n      div.innerHTML =  sanitizeHtml( evt.target.value );\r\n\r\n      const title = div.textContent.substring(0, 30);\r\n\r\n      this.props.editNote( this.props.folder, {\r\n        ...this.props.item,\r\n        title,\r\n        text: evt.target.value\r\n      } );\r\n\r\n      this.setState({ html: evt.target.value });\r\n    };\r\n  \r\n    sanitizeConf = {\r\n      allowedTags: [\"b\", \"i\", \"em\", \"strong\", \"a\", \"p\", \"h1\", \"h3\", \"h5\"],\r\n      allowedAttributes: { a: [\"href\"] }\r\n    };\r\n  \r\n    sanitize = () => {\r\n      this.setState({ html: sanitizeHtml(this.state.html, this.sanitizeConf) });\r\n    };\r\n  \r\n    toggleEditable = () => {\r\n      this.setState({ editable: !this.state.editable });\r\n    };\r\n    \r\n    render = () => {\r\n      return (\r\n        <div className=\"Note-view\">\r\n          <div className=\"Note-view-controls-left\">\r\n            <EditButton cmd=\"formatBlock\" arg=\"h1\" name=\"H1\" />\r\n            <EditButton cmd=\"formatBlock\" arg=\"h2\" name=\"H2\" />\r\n            <EditButton cmd=\"formatBlock\" arg=\"h3\" name=\"H3\" />\r\n            <EditButton cmd=\"formatBlock\" arg=\"h4\" name=\"H4\" />\r\n            <EditButton cmd=\"bold\" name=\"B\" />\r\n            <EditButton cmd=\"italic\" name=\"i\" />\r\n            <button onMouseDown={ (ev) => { ev.preventDefault() } }></button>\r\n            <ColorButton cmd=\"ForeColor\" color=\"black\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"white\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"#452977\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"#2ce82c\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"#427be6\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"#d24bd2\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"#1bca58\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"orange\"/>\r\n            <ColorButton cmd=\"ForeColor\" color=\"red\"/>\r\n          </div>\r\n          <ContentEditable\r\n            className=\"editable\"\r\n            tagName=\"pre\"\r\n            html={this.state.html} // innerHTML of the editable div\r\n            disabled={!this.state.editable} // use true to disable edition\r\n            onChange={this.handleChange} // handle innerHTML change\r\n          />\r\n          <div className=\"Note-view-controls-right\">\r\n            <EditButton\r\n              cmd=\"createLink\"\r\n              arg=\"https://github.com/lovasoa/react-contenteditable\"\r\n              name=\"L\"\r\n            />\r\n            <EditButton cmd=\"insertOrderedList\" name=\"OL\" />\r\n            <EditButton cmd=\"insertUnorderedList\" name=\"UL\" />\r\n            <EditButton cmd=\"indent\" name=\">\" />\r\n            <EditButton cmd=\"outdent\" name=\"<\" />\r\n            <button onMouseDown={ (ev) => { ev.preventDefault() } }>&nbsp;</button>\r\n            <button onMouseDown={ (ev) => { ev.preventDefault() } }></button>\r\n            <ColorButton cmd=\"BackColor\" color=\"black\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"white\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"rgb(189 153 255)\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"#2ce82c\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"#427be6\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"#d24bd2\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"#1bca58\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"orange\"/>\r\n            <ColorButton cmd=\"BackColor\" color=\"red\"/>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n  \r\n  function EditButton(props) {\r\n    const handler = (evt) => {\r\n        evt.preventDefault(); // Avoids loosing focus from the editable area\r\n        \r\n        if(props.cmd === 'createLink'){\r\n          const linkURL = prompt(\"Enter URL\", \"https://\");\r\n          \r\n          var sText = document.getSelection();\r\n          document.execCommand('insertHTML', false, '<a href=\"' + linkURL + '\" target=\"_blank\">' + sText + '</a>');\r\n        } else {\r\n          document.execCommand(props.cmd, false, props.arg); // Send the command to the browser\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n      <button\r\n        key={props.cmd}\r\n        onMouseDown={ handler }\r\n      >\r\n        {props.name || props.cmd}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  function ColorButton(props) {\r\n    return (\r\n      <button style={ { backgroundColor: props.color } }\r\n        key={props.cmd}\r\n        onMouseDown={evt => {\r\n          evt.preventDefault(); // Avoids loosing focus from the editable area\r\n          document.execCommand(props.cmd, false, props.color); // Send the command to the browser\r\n\r\n          // document.execCommand(‘ForeColor’, false, ‘red’);\r\n        }}\r\n      >\r\n        &nbsp;\r\n      </button>\r\n    );\r\n  }\r\n\r\n  export default connect( mapStateToProps, mapDispatchToProps )( RichNote );","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteNote } from '../../../statemanagement/Project/ProjectActionCreator';\r\nimport ActionIcon from '../../layouts/action-icon/ActionIcon';\r\n\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog';\r\nimport RichNote from './RichNote';\r\n\r\nconst mapDispatchToProps = ( dispatch, props ) => {\r\n    return {\r\n        deleteNote: () => {\r\n            dispatch( deleteNote( props.item.folder, props.item.id ) );\r\n        }\r\n    }\r\n}\r\n\r\nfunction NotesListItem( props ) {\r\n    const editNoteRef = React.useRef();\r\n    const previewNoteRef = React.useRef();\r\n    \r\n    const launchPreviewModal = () => {\r\n        previewNoteRef.current.openModal();\r\n    }\r\n\r\n    const hidePreviewModal = () => {\r\n        previewNoteRef.current.closeModal();\r\n    }\r\n\r\n    const launchModal = () => {\r\n        editNoteRef.current.openModal();\r\n    }\r\n\r\n    const hideModal = () => {\r\n        editNoteRef.current.closeModal();\r\n    }\r\n\r\n    const deleteNote = () => {\r\n        if( window.confirm( `Really want to delete note '${ props.item.title }'?` ) ) {\r\n            props.deleteNote();\r\n        }\r\n    }\r\n\r\n    const title = props.item.title;//\"test\";\r\n\r\n    return (\r\n        <li>\r\n            <div role=\"button\" aria-label={ title } tabIndex=\"0\" className=\"Note-listitem-title\" onClick={ launchPreviewModal }>{ title } </div>\r\n            <div>\r\n                <ActionIcon type='edit' arialabel=\"edit\"  onClick={ launchModal } />\r\n                <ActionIcon type='bin' arialabel=\"delete\"  onClick={ deleteNote } />\r\n            </div>\r\n            <ModalDialog ref={previewNoteRef} >\r\n                <RichNote  folder={ props.folder } onFinish={ hidePreviewModal } item_id={ props.item.id } mode=\"preview\"/>\r\n            </ModalDialog>\r\n            <ModalDialog ref={editNoteRef} >\r\n                <RichNote  folder={ props.folder } onFinish={ hideModal } item_id={ props.item.id }/>\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default connect( null, mapDispatchToProps )( NotesListItem );","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport \"./NotesList.css\";\r\nimport CreateNote from './CreateNote';\r\nimport NotesListItem from './NotesListItem';\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const notesObj = state.content[ownProps.folder] && state.content[ownProps.folder].notes;\r\n    const list = [];\r\n\r\n    if(notesObj) {\r\n        for (const [key, value] of Object.entries(notesObj)) {\r\n            list.push(value);\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...ownProps,\r\n        list\r\n    };\r\n};\r\n\r\n\r\nfunction NotesList(props) {\r\n    return (\r\n        <div className=\"Notes-list-region\" role=\"region\" aria-label=\"Notes list\">\r\n            <ul className=\"Notes-list\">\r\n                <CreateNote folder={props.folder} />\r\n\r\n                { props.list.length === 0 ? <li>No Notes!</li> : '' }\r\n                \r\n                {props.list.map((item, index) => {\r\n                    return <NotesListItem key={item.id} folder={props.folder} item={item}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotesList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './FolderBreadcrumbs.css';\r\n\r\nconst mapStateToProps = ( state, props ) => {\r\n    const parentFolders =  [];\r\n\r\n    let currentFolder = state.content[ state.content[props.folder].folder ];\r\n\r\n    while( currentFolder && currentFolder.id !== '$') {\r\n        parentFolders.push( currentFolder );\r\n\r\n        currentFolder = state.content[ currentFolder.folder ];\r\n    }\r\n\r\n    return {\r\n        parentFolders,\r\n        ...props\r\n    }\r\n}\r\n\r\nclass FolderBreadcrumbs extends React.Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"Folder-breadcrumbs-container\">\r\n                <li> \r\n                    { ( this.props.folder !== '$' ) ? ( <Link to={ `/explore` } > Home </Link> ) : '' }\r\n                    <span> / </span> \r\n                </li>\r\n                {\r\n                    this.props.parentFolders.slice(0).reverse().map( ( item, index ) => {\r\n                        return (\r\n                            <li key={ item.id }>\r\n                                <Link to={ `/explore/${ item.id }` } >{ item.name }</Link>\r\n                                <span> / </span>\r\n                            </li>\r\n                        )\r\n                    } )\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps )( FolderBreadcrumbs );","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PageContent from '../../layouts/page-content/PageContent';\r\nimport GridView from '../../layouts/responsive-gridview/GridView';\r\nimport FoldersList from '../folders-listview/FoldersList';\r\nimport TasksList from '../tasks-listview/TasksList';\r\nimport NotesList from '../notes-listview/NotesList';\r\nimport FolderBreadcrumbs from '../folder-breadcrumbs/FolderBreadcrumbs';\r\n\r\nconst mapStateToProps = ( state, props ) => {\r\n    const folder = props.folder ? props.folder : (props.match.params.folder ? props.match.params.folder : '$');\r\n    const title = (folder === '$') ? 'Explorer' : state.content[folder].name;\r\n\r\n    return {\r\n        folder,\r\n        title\r\n    }\r\n}\r\n\r\nconst Explorer = (props) => {\r\n    return (\r\n        <PageContent title={ props.title }>\r\n            <div>\r\n                <FolderBreadcrumbs folder={ props.folder }/>\r\n            </div>\r\n            <GridView cols=\"3\">\r\n                <FoldersList folder={ props.folder}/> \r\n                <TasksList folder={ props.folder }/>\r\n                <NotesList folder={ props.folder }/>\r\n            </GridView>\r\n        </PageContent>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps )( Explorer );","import React from 'react';\r\n\r\nimport ActionIcon from '../../layouts/action-icon/ActionIcon';\r\n\r\nconst ActionGridCellRender = (props)  => {\r\n    return (\r\n        <div>\r\n            <ActionIcon type='play'>Start</ActionIcon>\r\n            <ActionIcon type='accept'>Accept</ActionIcon>\r\n            <ActionIcon type='reject'>Reject</ActionIcon>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActionGridCellRender;","import React from 'react';\r\n\r\nconst TaskProgress = (props) => {\r\n    return (\r\n        <progress value={ props.data.progress } max=\"100\"> { props.data.progress } </progress>\r\n    );\r\n}\r\n\r\nexport default TaskProgress;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AgGridColumn } from 'ag-grid-react/lib/agGridColumn';\r\nimport { AgGridReact } from 'ag-grid-react/lib/agGridReact';\r\n\r\nimport ActionGridCellRender from './ActionCellRenderer';\r\nimport TaskProgress from './TaskProgress';\r\n\r\nconst mapStateToProps = ( state, props ) => {\r\n    const tasksObj =  state.content['$'] && state.content['$'].tasks;\r\n    const todoList = [];\r\n\r\n    if(tasksObj) {\r\n        for (const [key, value] of Object.entries(tasksObj)) {\r\n            console.log(`${key}: ${value}`);\r\n\r\n            todoList.push(value);\r\n        }\r\n    }\r\n\r\n    return {\r\n        todoList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch, props ) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst TodaysTasks = ( props ) => {\r\n    const [todoList, setRowData] = React.useState( props.todoList );\r\n  \r\n    const onRowClicked = (ev) => {\r\n        console.log(\"ROW CLICKED!\", ev.data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ag-theme-alpine\">\r\n            <h3>Todays Tasks</h3>\r\n            <AgGridReact  domLayout='autoHeight'\r\n                rowData={todoList}\r\n                frameworkComponents={\r\n                    {\r\n                        taskProgress: TaskProgress,\r\n                        actionCellRenderer: ActionGridCellRender\r\n                    }\r\n                }\r\n                onRowClicked= { onRowClicked }\r\n                >\r\n                <AgGridColumn field=\"priority\" sortable={true}></AgGridColumn>\r\n                <AgGridColumn field=\"title\" filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"estimate\" sortable={true} filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"deadline\" sortable={true} filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"status\" filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"progress\" cellRenderer='taskProgress'></AgGridColumn>\r\n                <AgGridColumn field=\"actions\" cellRenderer='actionCellRenderer'></AgGridColumn>\r\n            </AgGridReact>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( TodaysTasks );","import React from 'react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nimport PageContent from '../../layouts/page-content/PageContent'\r\nimport TodaysTasks from '../TodaysTaskList/TodaysTasks';\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <PageContent title=\"Dashboard\">\r\n            <TodaysTasks/>\r\n        </PageContent>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './side-nav.css';\r\n\r\nconst SideNav = () => {\r\n    return (\r\n        <nav aria-label=\"Main\">\r\n            <ul className=\"main-side-nav\">\r\n                <li><Link to='/'>Dashboard</Link></li>\r\n                <li><Link to='/explore'>Explorer</Link></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SideNav;","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './TaskTimer.css';\r\n\r\nimport ActionIcon from '../../layouts/action-icon/ActionIcon';\r\nimport Icon from '../../layouts/icon/Icon';\r\nimport { rejectTask, reopenTask, resolveTask, timerStopTask } from '../../../statemanagement/Project/ProjectActionCreator';\r\n\r\nimport ModalDialog from '../../layouts/modal-dialog/ModalDialog';\r\nimport EditTask from '../tasks-listview/EditTask';\r\n\r\nconst mapStateToProps = ( state, props ) => {\r\n    if(!props.data) {\r\n        throw new Error(\"Task details must be wrapped within an object with name `data`\");\r\n    }\r\n\r\n    const isTimer = !!props.data.startTimeStamp;\r\n\r\n    var startDateTime = new Date ( isTimer ? props.data.startTimeStamp : Date.now() );\r\n    var estimatedEndDateTime = new Date ( +startDateTime + props.data.estimate * 60 * 1000 ); // estimate is value saved in terms of minutes\r\n\r\n    return {\r\n        id: props.data.id, \r\n        folder: props.data.folder,\r\n        title: props.data.title,\r\n        startDateTime: startDateTime,\r\n        estimatedEndDateTime: estimatedEndDateTime,\r\n        progress: props.data.progress,\r\n        isTimer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch, props )=> {\r\n    return {\r\n        rejectTask: () => {\r\n            dispatch( rejectTask( props.data.folder, props.data.id ) );\r\n\r\n            dispatch( timerStopTask( props.data.folder, props.data.id ) );\r\n        }, \r\n        resolveTask: () => {\r\n            dispatch( resolveTask( props.data.folder, props.data.id ) );\r\n\r\n            dispatch( timerStopTask( props.data.folder, props.data.id ) );\r\n        }, \r\n        reopenTask: () => {\r\n            dispatch( timerStopTask( props.data.folder, props.data.id ) );\r\n\r\n            dispatch( reopenTask( props.data.folder, props.data.id ) );\r\n        }\r\n    }\r\n}\r\n\r\nconst TaskTimer = ( props ) => {\r\n    const modelRef = useRef();\r\n\r\n    const currentTime = Date.now();\r\n\r\n    const initProgress = ( (+currentTime - +props.startDateTime) / (+props.estimatedEndDateTime - +props.startDateTime) ) * 100;\r\n\r\n    const diffTime = props.estimatedEndDateTime - currentTime;//props.startDateTime;\r\n    const diffTimeInSecs = Math.floor( diffTime/1000 );\r\n\r\n    const initHrs = Math.floor( diffTimeInSecs / (60 * 60) );\r\n    const initMins = Math.abs( ( initHrs*60 ) - Math.floor( diffTimeInSecs/60 ) );\r\n    const initSecs = Math.abs( diffTimeInSecs - ((initHrs * 60 * 60) + (initMins * 60)) );\r\n\r\n    const [hrs, setHrs] = React.useState(initHrs);\r\n    const [mins, setMins] = React.useState(initMins);\r\n    const [secs, setSecs] = React.useState(initSecs);\r\n    const [progress, setProgress] = React.useState(initProgress);\r\n\r\n    const [showWarning, setWarningStatus] = React.useState(false);\r\n\r\n    const markResolved = () => {\r\n        props.resolveTask();\r\n    }\r\n\r\n    const markRejected = () => {\r\n        props.rejectTask()\r\n    }\r\n\r\n    const resetAndRemove = () => {\r\n        props.reopenTask();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentTime = Date.now();\r\n    \r\n            const initProgress = ( (+currentTime - +props.startDateTime) / (+props.estimatedEndDateTime - +props.startDateTime) ) * 100;\r\n    \r\n            const diffTime = props.estimatedEndDateTime -currentTime;//props.startDateTime;\r\n            const diffTimeInSecs = Math.floor( diffTime/1000 );\r\n    \r\n            const initHrs = Math.floor( diffTimeInSecs / (60 * 60) );\r\n            const initMins = Math.abs( ( initHrs*60 ) - Math.floor( diffTimeInSecs/60 ) );\r\n            const initSecs = Math.abs( diffTimeInSecs - ((initHrs * 60 * 60) + (initMins * 60)) );\r\n            \r\n            setHrs( initHrs );\r\n            setMins( initMins );\r\n            setSecs( initSecs );\r\n    \r\n            setProgress( initProgress );\r\n            // document.title = `${  (hrs < 10 ? '0'+hrs : hrs) + ':' + (mins < 10 ? '0' + mins : mins) + ':' + (secs < 10 ? '0' + secs : secs) }`;\r\n    \r\n            if( initProgress >= 100 ){\r\n                clearInterval(interval);\r\n                setWarningStatus(true);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval( interval );\r\n    }, []);\r\n\r\n    const showEditNoteModal = () => {\r\n        modelRef.current.openModal();\r\n    }\r\n\r\n    const closeEditNoteModal = () => {\r\n        modelRef.current.closeModal();\r\n    }\r\n\r\n    return (\r\n        <li className=\"Timer-taskbaritem\">\r\n            <div className=\"Timer-taskbaritem-summary\">{\r\n                    props.isTimer ? (\r\n                        showWarning ? (\r\n                            <div className=\"task-timer-warning\">\r\n                                <Icon type=\"warning\"></Icon>\r\n                                Timeup!!\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"task-timer-countdown\" role=\"timer\">\r\n                                <span>{ hrs < 10 ? '0'+hrs : hrs }</span><span>:</span><span>{ mins < 10 ? '0' + mins : mins }</span><span>:</span><span>{ secs < 10 ? '0' + secs : secs }</span>\r\n                                <progress value={ progress } max=\"100\"/>\r\n                            </div>\r\n                        ) ) :\r\n                    <div className=\"task-timer-title\"> { props.title } </div>\r\n            }</div>\r\n            <div className=\"task-timer-detailview\">\r\n                <div className=\"task-timer-title\" onClick={ showEditNoteModal }> { props.title } </div>\r\n                <div>\r\n                    <div className=\"task-timer-targettime\">\r\n                        { props.estimatedEndDateTime.toLocaleString([], { hour12: true }) }\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-timer-actions\"> \r\n                    <ActionIcon type='accept' onClick={ markResolved }>Accept</ActionIcon>\r\n                    <ActionIcon type='reject' onClick={ markRejected }>Reject</ActionIcon>\r\n                    <ActionIcon type='refresh' onClick={ resetAndRemove }>Reset and Remove</ActionIcon>\r\n                </div>\r\n            </div>\r\n            <ModalDialog ref={ modelRef } title=\"Preview Task\">\r\n                <EditTask folder={ props.folder } item_id={ props.id }  onFinish={ closeEditNoteModal } preview={ true }/>\r\n            </ModalDialog>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( TaskTimer );","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './timer-taskbar.css';\r\nimport TaskTimer from './TaskTimer';\r\nimport { timerStartNextTask } from '../../../statemanagement/Project/ProjectActionCreator';\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    const activeTask = state.task_timers.active;\r\n    const taskList = state.task_timers.queue;\r\n\r\n    return {\r\n        activeTask,\r\n        taskList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        startNext: ( startTimestamp )=> {\r\n            dispatch( timerStartNextTask( startTimestamp ) );\r\n        }\r\n    }\r\n};\r\n\r\nconst TimerTaskbar = ( props ) => {\r\n    React.useEffect( () => {\r\n        if( props.activeTask == null && props.taskList.length > 0) {\r\n            props.startNext( Date.now() );\r\n        }\r\n    } );\r\n\r\n    return (\r\n        <ul className=\"Timer-taskbar\">\r\n            {\r\n                props.activeTask ? <TaskTimer data={ props.activeTask }/> : ''\r\n            }\r\n            {\r\n                props.taskList.map(( item ) => {\r\n                    return <TaskTimer key={ item.id } data={ item }/>\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( TimerTaskbar );","import React, { useEffect, useState } from 'react';\r\n\r\nconst quotes = [\r\n    \"“ You can have it all. Just not all at once. ”\",\r\n    \"“ You may delay, but time will not. ”\",\r\n    \"“ Tomorrow is often the busiest day of the week. ”\",\r\n    \"“ The bad news is time flies. The good news is you’re the pilot ”\",\r\n    \"“ Never look back unless you are planning to go that way. ”\",\r\n    \"“ Never begin the day until it is finished on paper. ”\",\r\n    \"“ A man who dares to waste one hour of life has not discovered the value of life. ”\",\r\n    \"“ If I had six hours to chop down a tree, I would spend the first four hours sharpening the axe. ”\",\r\n    \"“ The key is in not spending time, but in investing it. ”\",\r\n    \"“ One can find time for everything if one is never in a hurry. ”\",\r\n    \"“ To do two things at once is to do neither. ”\",\r\n    \"“ The shorter way to do many things is to only do one thing at a time. ”\",\r\n    \"“ Be like a postage stamp — stick to one thing until you get there. ”\",\r\n    \"“ One always has time enough, if one will apply it well. ”\",\r\n    \"“ Your future is created by what you do today, not tomorrow. ”\",\r\n    \"“ The time you `Enjoy` wasting is not wasted time. ”\",\r\n    \"“ If you don’t know where you are going, you’ll end up someplace else. ”\",\r\n    \"“ Unless commitment is made, there are only promises and hopes; but no plans. ”\",\r\n    \"“ Making a plan without the right tools is like making spaghetti without a pot. ”\",\r\n    \"“ Before anything else, preparation is the key to success. ”\",\r\n    \"“ To achieve great things, two things are needed; a plan, and not quite enough time. ”\",\r\n    \"“ I don’t believe in failure. It’s not failure if you enjoyed the process. ”\"\r\n]\r\n\r\nconst getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nconst Quotes = ( props ) => {\r\n    const [ quote, setQuote ] = useState( quotes[getRandomInt(0, 22)] );\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval( () => {\r\n            setQuote( quotes[getRandomInt(0, 22)] );\r\n        }, 10000) ;\r\n\r\n        return () => {\r\n            clearInterval( interval );\r\n        }\r\n    }, []);\r\n\r\n    return <div>\r\n        { quote }\r\n    </div>\r\n}\r\n\r\nexport default Quotes;","import React from 'react';\r\nimport { Route,  BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport \"./Portal.css\";\r\n\r\nimport AppBranding from '../../gadgets/app-branding/AppBranding';\r\nimport StructureMenu from '../../gadgets/structure-treeview/StructureMenu';\r\nimport Explorer from '../../gadgets/explorer/Explorer';\r\nimport Dashboard from '../../gadgets/dashboard/Dashboard';\r\nimport SideNav from '../../gadgets/side-nav/SideNav';\r\nimport TimerTaskbar from '../../gadgets/timer-taskbar/TimerTaskbar';\r\nimport Quotes from '../../gadgets/quotes-block/Quotes';\r\n\r\nfunction Portal(props) {\r\n    return (\r\n        <div className=\"c-portal\">\r\n            <Router>\r\n                <div className=\"left-sidebar\">\r\n                    <header>\r\n                        <AppBranding appTitle={props.appTitle} appIcon={props.appIcon}/>\r\n                    </header>\r\n                    <section>\r\n                        <header>Navigation</header>\r\n                        <SideNav/>\r\n                    </section>\r\n                    <section>\r\n                        <header>Structure</header>\r\n                        <StructureMenu/>\r\n                    </section>\r\n                </div>\r\n                <div className=\"main-content\">\r\n                    <header>\r\n                        <Quotes/>\r\n                    </header>\r\n                    <main className=\"main-content-area\">\r\n                        <Route path=\"/\" exact component={ Dashboard }/>\r\n                        <Route path=\"/explore\" exact>\r\n                            <Explorer folder=\"$\"/>\r\n                        </Route>\r\n                        <Route path=\"/explore/:folder\" component={ Explorer }/>\r\n                    </main>\r\n                    <TimerTaskbar/>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portal;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Portal from './components/layouts/portal-view/Portal';\nimport Dashboard from './components/gadgets/dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <Portal appIcon={logo} appTitle=\"Tracker\" projectName=\"Tracker\" pageTitle=\"Tracker\"/>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\r\n * Store Structure of Project object\r\n *//*\r\nconst initialState = { \r\n    name: 'Default project', \r\n    id: 'default',\r\n    content: {\r\n        '$': {\r\n            id: '$',\r\n            folder: '$',\r\n            name: 'root',\r\n            fldr: {\r\n                'fldr-0-1': 1\r\n            },\r\n            tasks: {\r\n                'tsk-0-1': {\r\n                    id: 'tsk-0-1',\r\n                    folder: '$',\r\n                    title: 'first task',\r\n                    // ...\r\n                }\r\n            },\r\n            notes: {\r\n                'note-0-1': {\r\n                    id: 'note-0-1',\r\n                    folder: '$',\r\n                    text: '<b>Kiran 1</b>'\r\n                },\r\n                'note-0-2': {\r\n                    id: 'note-0-2',\r\n                    folder: '$',\r\n                    text: '<b>Kiran 2</b>'\r\n                }\r\n            },\r\n            // ...\r\n        },\r\n        'fldr-0-1': {\r\n            id: 'fldr-0-1',\r\n            folder: 'root',\r\n            name: 'My First Folder',\r\n            fldr: {\r\n                'fldr-0-11': 1, \r\n                'fldr-0-12': 1\r\n            },\r\n            tasks: {\r\n                'tsk-0-11': {\r\n                    id: 'tsk-0-11',\r\n                    folder: 'fldr-0-1',\r\n                    title: 'zzz',\r\n                    // ...\r\n                }\r\n            },\r\n            notes: {\r\n                'note-0-1': {\r\n                    id: 'note-0-1',\r\n                    folder: 'fldr-0-1',\r\n                    text: '<b>Kiran 1</b>'\r\n                },\r\n                'note-0-2': {\r\n                    id: 'note-0-2',\r\n                    folder: 'fldr-0-1',\r\n                    text: '<b>Kiran 2</b>'\r\n                }\r\n            }\r\n            // ...\r\n        },\r\n        'fldr-0-11': {\r\n            id: 'fldr-0-11',\r\n            folder: 'fldr-0-1',\r\n            name: 'My First-Sub Folder',\r\n            fldr: {\r\n            },\r\n            tasks: {\r\n                'tsk-0-12': {\r\n                    id: 'tsk-0-1',\r\n                    folder: 'fldr-0-1',\r\n                    title: 'zzz',\r\n                    // ...\r\n                }\r\n            }\r\n            // ...\r\n        },\r\n        'fldr-0-12': {\r\n            id: 'fldr-0-12',\r\n            folder: 'Second-0-1',\r\n            name: 'My Second-Sub Folder',\r\n            fldr: {\r\n            },\r\n            tasks: {}\r\n            // ...\r\n        }\r\n    },\r\n    calender: {\r\n        'unscheduled': {\r\n            'task-id': 'task-id',\r\n            'task-id-2': 'task-id-2'\r\n        }\r\n        unplanned: {\r\n            '12-10-2020': {\r\n                'task-0-2-1': {\r\n                    'task-id': 'task-0-2-1,\r\n                    start: 'any',\r\n                    end: 'any'\r\n                }\r\n            }\r\n        },\r\n        planned: {\r\n            '12-9-2020': { // note: each task must contain atleast the date of the schudule\r\n                'tsk-0-1-2': {\r\n                    task_id: 'tsk-0-1-1',\r\n                    from: '10:30',\r\n                    to: '13:30'\r\n                }\r\n            }\r\n        },\r\n        'finished': { // we can delete this object entirely, we dont need to keep track of what time we finished the task\r\n            '11-9-2020': {\r\n                'tsk-0-1-1: {\r\n                    task_id: 'tsk-0-1-1',\r\n                    from: '11:30',\r\n                    to: '14:15'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    task_timers: {\r\n        active: {\r\n            task_id: 'tsk-0-22-1',\r\n            folder: 'fldr-33-2',\r\n            title: 'fefsdf',\r\n            estimate: 55,\r\n            startTimeStamp: 33453422\r\n        },\r\n        queue: [\r\n            {\r\n                task_id: 'tsk-0-11-1', \r\n                folder: 'fldr-33-4',\r\n                title: 'asdfad',\r\n                estimate: 30\r\n            }\r\n        ]\r\n    }\r\n}\r\n*/\r\n\r\n// import { CREATE_FOLDER, DELETE_FOLDER, EDIT_FOLDER, INIT, LOAD, CREATE_NOTE, EDIT_NOTE, DELETE_NOTE, CREATE_TASK, EDIT_TASK, DELETE_TASK } from \"./ProjectActionTypes\";\r\nimport * as Actions from \"./ProjectActionTypes\";\r\n\r\nconst initialState = { \r\n    name: 'Default project', \r\n    id: 'default',\r\n    content: {\r\n        '$': {\r\n            id: '$',\r\n            folder: '{$}',\r\n            name: 'root',\r\n            fldr: {},\r\n            tasks: {},\r\n            notes: {}\r\n        }\r\n    },\r\n    task_timers: {\r\n        active: null,\r\n        queue: []\r\n    }\r\n};\r\n\r\nfunction projectStateReducer(state = initialState, action) {\r\n  // Check to see if the reducer cares about this action\r\n  switch (action.type) {\r\n    case Actions.INIT: {\r\n        const id = 'prjt-' + (new Date()).getTime() + '-' + Math.floor((Math.random() * 100000)); //TODO get uniq-id from some library\r\n\r\n        return {\r\n            ...state,\r\n            id,\r\n            name: action.payload.name\r\n        }\r\n    } case Actions.LOAD: \r\n        return action.payload\r\n    case Actions.CREATE_FOLDER: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const newId = 'fldr-' + (new Date()).getTime() + '-' + Math.floor((Math.random() * 100000)); //TODO get uniq-id from some library\r\n\r\n        action.payload.id = newId;\r\n        action.payload.fldr = {};\r\n        action.payload.notes = {};\r\n        action.payload.tasks = {};\r\n\r\n        // add record to the content object\r\n        newState.content[newId] = action.payload;\r\n        // update parent folder\r\n        newState.content[action.payload.folder].fldr[newId] = 1;\r\n\r\n        return newState\r\n    } case Actions.EDIT_FOLDER: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        // update actual record from the content\r\n        newState.content[action.payload.id].name = action.payload.data.name;\r\n\r\n        return newState\r\n    } case Actions.DELETE_FOLDER: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = newState.content[action.payload.id].folder;\r\n        \r\n        // delete actual record from the content\r\n        delete newState.content[action.payload.id];\r\n        // delete parent reference\r\n        delete newState.content[parentFolderId].fldr[action.payload.id];\r\n\r\n        return newState\r\n    } case Actions.CREATE_NOTE: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const newId = 'note-' + (new Date()).getTime() + '-' + Math.floor((Math.random() * 100000)); //TODO get uniq-id from some library\r\n\r\n        action.payload.id = newId;\r\n\r\n        // update parent folder :: assuming that folder(id) also comes as part of the payload\r\n        newState.content[action.payload.folder].notes[newId] = action.payload;\r\n\r\n        return newState\r\n    } case Actions.EDIT_NOTE: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        // update actual record from the content\r\n        newState.content[action.payload.folder].notes[action.payload.id] = {\r\n            ...newState.content[action.payload.folder].notes[action.payload.id],\r\n            ...action.payload\r\n        };\r\n\r\n        return newState\r\n    } case Actions.DELETE_NOTE: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        // delete parent reference\r\n        delete newState.content[parentFolderId].notes[action.payload.id];\r\n\r\n        return newState\r\n    } case Actions.CREATE_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const newId = 'task-' + (new Date()).getTime() + '-' + Math.floor((Math.random() * 100000)); //TODO get uniq-id from some library\r\n\r\n        action.payload.id = newId;\r\n\r\n        // update parent folder :: assuming that folder(id) also comes as part of the payload\r\n        newState.content[action.payload.folder].tasks[newId] = action.payload;\r\n\r\n        return newState\r\n    } case Actions.EDIT_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        // update actual record from the content\r\n        newState.content[action.payload.folder].tasks[action.payload.id] = {\r\n            ...newState.content[action.payload.folder].tasks[action.payload.id],\r\n            ...action.payload\r\n        };\r\n\r\n        return newState\r\n    } case Actions.START_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        newState.content[parentFolderId].tasks[action.payload.id].status = 'inprogress';\r\n\r\n        return newState\r\n    } case Actions.RESOLVE_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        newState.content[parentFolderId].tasks[action.payload.id].status = 'resolved';\r\n\r\n        return newState\r\n    } case Actions.REJECT_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        newState.content[parentFolderId].tasks[action.payload.id].status = 'rejected';\r\n\r\n        return newState\r\n    } case Actions.REOPEN_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        newState.content[parentFolderId].tasks[action.payload.id].status = 'reopen';\r\n\r\n        return newState\r\n    } case Actions.DELETE_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        // delete parent reference\r\n        delete newState.content[parentFolderId].tasks[action.payload.id];\r\n\r\n        return newState\r\n    } case Actions.TIMER_TRACK_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        \r\n        const id = newState.content[parentFolderId].tasks[action.payload.id].id;\r\n        const title = newState.content[parentFolderId].tasks[action.payload.id].title;\r\n        const estimate = newState.content[parentFolderId].tasks[action.payload.id].estimate;\r\n\r\n        let skipEnqueue = false;\r\n\r\n        if ( newState.task_timers.queue.length >= 4 ) {\r\n            skipEnqueue = true;\r\n        } else if ( newState.task_timers.active && newState.task_timers.active.id === id ) {\r\n            skipEnqueue = true;\r\n        } else {\r\n            // TODO scope to optimize using map n array instead of iterating the array\r\n            skipEnqueue = !! newState.task_timers.queue.find((item) => {\r\n                return item.id === id;\r\n            });\r\n        }\r\n\r\n        if( skipEnqueue ) {\r\n            return state;\r\n        }\r\n\r\n        newState.task_timers.queue.push( {\r\n            id,\r\n            folder: parentFolderId,\r\n            title,\r\n            estimate\r\n        } );\r\n\r\n        return newState\r\n    } case Actions.TIMER_STARTNEXT_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        newState.task_timers.active = newState.task_timers.queue.shift();\r\n        newState.task_timers.active.startTimeStamp = action.payload.startTimeStamp;\r\n\r\n        return newState\r\n    } case Actions.TIMER_STOP_TASK: {\r\n        const newState = JSON.parse( JSON.stringify( state ) );\r\n\r\n        const parentFolderId = action.payload.folder;\r\n        const id = newState.content[parentFolderId].tasks[action.payload.id].id;\r\n\r\n        if( newState.task_timers.active.id === id ){\r\n            newState.task_timers.active = null; // newState.task_timers.queue.shift();\r\n        } else {\r\n            newState.task_timers.queue = newState.task_timers.queue.filter((item) => {\r\n                return item.id !== id;\r\n            });\r\n        }\r\n\r\n        return newState\r\n    } default: \r\n        return state\r\n  }\r\n}\r\n\r\nexport {\r\n    initialState,\r\n    projectStateReducer\r\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport throttle from 'lodash.throttle';\r\n\r\nimport { initialState, projectStateReducer } from './Project/ProjectReducer'\r\n\r\nconst persistedState = localStorage.getItem('ProjectData') \r\n                       ? JSON.parse(localStorage.getItem('ProjectData'))\r\n                       : initialState\r\n\r\nconst store = configureStore({ reducer: projectStateReducer , preloadedState: persistedState });\r\n\r\nstore.subscribe( throttle( () => {\r\n    localStorage.setItem('ProjectData', JSON.stringify(store.getState()));\r\n}, 1000) );\r\n\r\nconsole.log(store.getState())\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from './statemanagement/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}